name: Deploy to Google Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build frontend
      run: |
        # 檢查是否有前端建構腳本
        if [ -f "package.json" ] && grep -q "vite" package.json; then
          npm run build
        else
          echo "No frontend build script found, creating placeholder"
          mkdir -p dist
          echo "<html><body><h1>AI Task Dispatch Center</h1><p>Frontend not configured</p></body></html>" > dist/index.html
        fi
        ls -la dist/
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Deploy to Cloud Run (Direct)
      run: |
        gcloud run deploy ai-dispatch-backend \
          --source ./backend \
          --platform managed \
          --region asia-east1 \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --timeout 3600 \
          --max-instances 10 \
          --service-account=ai-dispatch-service@${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com \
          --set-env-vars "NODE_ENV=production,FIRESTORE_COLLECTION=tasks,GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},GOOGLE_SHEET_ID=${{ secrets.GOOGLE_SHEET_ID }},GMAIL_USER=${{ secrets.GMAIL_USER }},GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}"
          
    - name: Deploy frontend to Cloud Storage
      run: |
        BUCKET_NAME="ai-dispatch-frontend-$(date +%s)"
        echo "Using bucket name: $BUCKET_NAME"
        
        # 創建儲存桶
        gsutil mb gs://$BUCKET_NAME/ || echo "Bucket may already exist"
        
        # 等待儲存桶創建完成
        sleep 15
        
        # 設定網站配置
        gsutil web set -m index.html -e 404.html gs://$BUCKET_NAME/
        
        # 創建前端檔案
        if [ -d "./dist" ]; then
          echo "Found dist directory, uploading files"
          gsutil -m cp -r ./dist/* gs://$BUCKET_NAME/
        else
          echo "dist directory not found, creating placeholder"
          mkdir -p dist
          cat > dist/index.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Task Dispatch Center</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; text-align: center; }
        h1 { color: #333; }
        p { color: #666; }
    </style>
</head>
<body>
    <h1>🤖 AI 任務派遣中心</h1>
    <p>智慧型任務分析、自動指派與多平台通知系統</p>
    <p>前端正在建構中...</p>
</body>
</html>
EOF
          gsutil -m cp -r ./dist/* gs://$BUCKET_NAME/
        fi
        
        # 設定公開存取權限
        gsutil iam ch allUsers:objectViewer gs://$BUCKET_NAME/
        
        # 驗證部署
        gsutil ls gs://$BUCKET_NAME/
        
        # 輸出儲存桶名稱供後續使用
        echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
        
    - name: Get deployment URLs
      run: |
        BACKEND_URL=$(gcloud run services describe ai-dispatch-backend --platform managed --region asia-east1 --format 'value(status.url)')
        FRONTEND_URL="https://storage.googleapis.com/$BUCKET_NAME/index.html"
        echo "Backend URL: $BACKEND_URL"
        echo "Frontend URL: $FRONTEND_URL"
        echo "Backend Health Check: $BACKEND_URL/health"
        echo "Backend API Info: $BACKEND_URL/"
